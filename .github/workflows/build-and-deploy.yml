name: Build and deploy app
run-name: Deploy to ${{ inputs.environment }}/${{ inputs.cardano_network }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      cardano_network:
        required: true
        type: choice
        default: "sanchonet"
        options:
          - "sanchonet"
      environment:
        required: true
        type: choice
        default: "dev"
        options:
          - "dev"
          - "test"
          - "staging"
          - "beta"
      resync_cardano_node_and_db:
        required: true
        type: boolean
        default: false

env:
  ENVIRONMENT: ${{ inputs.environment || 'dev' }}
  CARDANO_NETWORK: ${{ inputs.cardano_network || 'sanchonet' }}

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scripts/govtool
    env:
      DBSYNC_POSTGRES_DB: "cexplorer"
      DBSYNC_POSTGRES_USER: "postgres"
      DBSYNC_POSTGRES_PASSWORD: "pSa8JCpQOACMUdGb"
      GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD }}
      GRAFANA_SLACK_RECIPIENT: ${{ secrets.GRAFANA_SLACK_RECIPIENT }}
      GRAFANA_SLACK_OAUTH_TOKEN: ${{ secrets.GRAFANA_SLACK_OAUTH_TOKEN }}
      NGINX_BASIC_AUTH: ${{ secrets.NGINX_BASIC_AUTH }}
      SENTRY_DSN_BACKEND: ${{ secrets.SENTRY_DSN_BACKEND }}
      TRAEFIK_LE_EMAIL: "admin+govtool@binarapps.com"
      GTM_ID: ${{ secrets.GTM_ID }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN_FRONTEND }}
      PIPELINE_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.GHA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GHA_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to AWS ECR
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-1

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.GHA_SSH_PRIVATE_KEY }}

      - name: Deploy app
        run: |
          if [[ "${{ inputs.environment }}" == "staging" ]]; then export DOMAIN=staging.govtool.byron.network; fi;
          if [[ "${{ inputs.environment }}" == "beta" ]]; then export DOMAIN=sanchogov.tools; fi;
          export DOMAIN=${DOMAIN:-$ENVIRONMENT-$CARDANO_NETWORK.govtool.byron.network}
          make all

      - name: Reprovision Grafana
        run: |
          sleep 30 # give grafana time to start up
          if [[ "${{ inputs.environment }}" == "staging" ]]; then export DOMAIN=staging.govtool.byron.network; fi;
          if [[ "${{ inputs.environment }}" == "beta" ]]; then export DOMAIN=sanchogov.tools; fi;
          DOMAIN=${DOMAIN:-$ENVIRONMENT-$CARDANO_NETWORK.govtool.byron.network}
          curl -X POST -u "admin:$GRAFANA_ADMIN_PASSWORD" https://$DOMAIN/grafana/api/admin/provisioning/alerting/reload
          curl -X POST -u "admin:$GRAFANA_ADMIN_PASSWORD" https://$DOMAIN/grafana/api/admin/provisioning/dashboards/reload
          curl -X POST -u "admin:$GRAFANA_ADMIN_PASSWORD" https://$DOMAIN/grafana/api/admin/provisioning/notifications/reload
